// <auto-generated />
using System;
using BookResourceSystem.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookResourceSystem.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20241016035413_AddBookCategories")]
    partial class AddBookCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookResourceSystem.Entities.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Authors", t =>
                        {
                            t.HasComment("作者實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f8ecdce-de59-4bd1-bf85-2339efaf2d3e"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "測試作者A"
                        },
                        new
                        {
                            Id = new Guid("502a096f-402e-4e5d-b797-661c80cef1fc"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "測試作者B"
                        },
                        new
                        {
                            Id = new Guid("fcecfd23-beb0-4079-acd5-37b2c1fd97a9"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "測試作者C"
                        });
                });

            modelBuilder.Entity("BookResourceSystem.Entities.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BookLanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PublishingHouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("BookLanguageId");

                    b.HasIndex("OriginalBookId");

                    b.HasIndex("PublishingHouseId");

                    b.ToTable("Books", t =>
                        {
                            t.HasComment("圖書實體");
                        });
                });

            modelBuilder.Entity("BookResourceSystem.Entities.Models.BookCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BookCategories", t =>
                        {
                            t.HasCheckConstraint("CK_BookCategories_Name_MinLength", "LEN([Name]) >= 1");
                        });
                });

            modelBuilder.Entity("BookResourceSystem.Entities.Models.BookLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BookLanguages", t =>
                        {
                            t.HasCheckConstraint("CK_BookLanguages_Name_MinLength", "LEN([Name]) >= 1");
                        });
                });

            modelBuilder.Entity("BookResourceSystem.Entities.Models.PublishingHouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PublishingHouses", t =>
                        {
                            t.HasComment("出版社實體");
                        });

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b810218-da4f-49c9-a2a8-11d34fd58f4f"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Introduction = "測試出版社A資訊",
                            Name = "測試出版社A"
                        },
                        new
                        {
                            Id = new Guid("0b683c48-7f19-4025-9fb6-996e36629e25"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "測試出版社B"
                        });
                });

            modelBuilder.Entity("BookResourceSystem.Entities.Models.Book", b =>
                {
                    b.HasOne("BookResourceSystem.Entities.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("BookResourceSystem.Entities.Models.BookLanguage", "BookLanguage")
                        .WithMany()
                        .HasForeignKey("BookLanguageId");

                    b.HasOne("BookResourceSystem.Entities.Models.Book", "OriginalBook")
                        .WithMany()
                        .HasForeignKey("OriginalBookId");

                    b.HasOne("BookResourceSystem.Entities.Models.PublishingHouse", "PublishingHouse")
                        .WithMany()
                        .HasForeignKey("PublishingHouseId");

                    b.Navigation("Author");

                    b.Navigation("BookLanguage");

                    b.Navigation("OriginalBook");

                    b.Navigation("PublishingHouse");
                });
#pragma warning restore 612, 618
        }
    }
}
